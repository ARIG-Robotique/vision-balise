#include "OledBitmap.h"
#include "OledFont8x16.h"
#include "OledGraphics.h"
#include "Screen.h"
#include "utils.h"

const SSD1306::OledBitmap<128, 64> logo{
        0x00, 0x01, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0x80, 0x00,
        0x00, 0x03, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00,
        0x00, 0x03, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xc0, 0x00,
        0x00, 0x07, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0xe0, 0x00,
        0x00, 0x06, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x60, 0x00,
        0x00, 0x0c, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x00,
        0x00, 0x1c, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x03, 0xc6, 0x00, 0x00, 0x00, 0x30, 0x00,
        0x00, 0x18, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x07, 0xe6, 0x00, 0x00, 0x00, 0x18, 0x00,
        0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x1c, 0x00,
        0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x0c, 0x00,
        0x00, 0x60, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x0e, 0x00,
        0x00, 0x60, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x06, 0x00,
        0x00, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00,
        0x01, 0xc0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x03, 0x00,
        0x01, 0x80, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x01, 0x80,
        0x03, 0x00, 0xff, 0xff, 0xf8, 0x03, 0x3f, 0xff, 0xff, 0x07, 0xe0, 0x0f, 0xff, 0xff, 0x81, 0xc0,
        0x03, 0x03, 0xff, 0xff, 0xfc, 0x03, 0xff, 0xff, 0xff, 0x8f, 0xf0, 0x1f, 0xff, 0xff, 0xe0, 0xc0,
        0x06, 0x07, 0xff, 0xff, 0xfe, 0x01, 0xff, 0xff, 0xff, 0x8f, 0xf0, 0x3f, 0xff, 0xff, 0xe0, 0x60,
        0x0e, 0x07, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0x8f, 0xf0, 0x7f, 0xff, 0xff, 0xf0, 0x60,
        0x0c, 0x0f, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0x8f, 0xf0, 0xff, 0xff, 0xff, 0xf8, 0x30,
        0x1c, 0x0f, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0x8f, 0xf0, 0xff, 0xff, 0xff, 0xf8, 0x30,
        0x1c, 0x1f, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0xfc, 0x38,
        0x0c, 0x1f, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xc0, 0x0f, 0xfc, 0x30,
        0x0e, 0x1f, 0xe0, 0x00, 0x3f, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfe, 0x00, 0x03, 0xfc, 0x60,
        0x06, 0x1f, 0xe0, 0x00, 0x3f, 0xc7, 0xf8, 0x00, 0x00, 0x1f, 0xf1, 0xfe, 0x00, 0x03, 0xfc, 0x60,
        0x03, 0x1f, 0xf0, 0x00, 0x3f, 0xc7, 0xf8, 0x00, 0x00, 0x0f, 0xf1, 0xff, 0x00, 0x03, 0xfc, 0xc0,
        0x03, 0x1f, 0xff, 0xff, 0x3f, 0xc7, 0xf8, 0x00, 0x3e, 0x0f, 0xf0, 0xff, 0xff, 0xf3, 0xfc, 0xc0,
        0x01, 0x9f, 0xff, 0xff, 0xbf, 0xc7, 0xf8, 0x00, 0x7f, 0x0f, 0xf0, 0xff, 0xff, 0xfb, 0xfd, 0x80,
        0x01, 0x8f, 0xff, 0xff, 0xbf, 0xc7, 0xf8, 0x00, 0x7f, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x80,
        0x00, 0xcf, 0xff, 0xff, 0xbf, 0xcf, 0xf8, 0x00, 0xff, 0x0f, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0x00,
        0x00, 0xe7, 0xff, 0xff, 0xbf, 0xcf, 0xf8, 0x00, 0xff, 0x0f, 0xf0, 0x7f, 0xff, 0xff, 0xfe, 0x00,
        0x00, 0x63, 0xff, 0xff, 0xbf, 0xdf, 0xf8, 0x00, 0x7f, 0x0f, 0xf8, 0x3f, 0xff, 0xfb, 0xfe, 0x00,
        0x00, 0x31, 0xff, 0xff, 0xbf, 0xbf, 0xf8, 0x00, 0x7e, 0x0f, 0xf8, 0x0f, 0xff, 0xfb, 0xfc, 0x00,
        0x00, 0x30, 0x3f, 0xff, 0x1f, 0x37, 0xe0, 0x00, 0x1c, 0x03, 0xec, 0x03, 0xff, 0xf3, 0xfc, 0x00,
        0x00, 0x18, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x03, 0xfc, 0x00,
        0x00, 0x18, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x03, 0xfc, 0x00,
        0x00, 0x0c, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x03, 0xfc, 0x00,
        0x00, 0x0e, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x3f, 0xff, 0xfc, 0x00,
        0x00, 0x06, 0x00, 0x00, 0x01, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x80, 0x7f, 0xff, 0xfc, 0x00,
        0x00, 0x03, 0x00, 0x00, 0x03, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xc0, 0x7f, 0xff, 0xf8, 0x00,
        0x00, 0x03, 0xff, 0xff, 0xff, 0x60, 0x00, 0x00, 0x00, 0x00, 0x06, 0xff, 0xff, 0xff, 0xf8, 0x00,
        0x00, 0x01, 0xff, 0xff, 0xfe, 0x60, 0x00, 0x00, 0x00, 0x00, 0x06, 0xff, 0xff, 0xff, 0xf0, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x7f, 0xff, 0xe0, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x7f, 0xff, 0xc0, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x3f, 0xff, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

String getSystemTemp() {
#ifdef PI
    return arig_utils::exec("vcgencmd measure_temp | cut -d'=' -f2");
#else
    return arig_utils::exec("sensors | grep 'Package' | cut -d' ' -f5 | tr 'Â°' \"'\"");
#endif
}

String getLocalIp() {
    return arig_utils::exec("hostname -I | cut -d' ' -f1");
}

Screen::Screen(Config *config) {
    this->config = config;

#ifdef PI
    display = new SSD1306::OledI2C("/dev/i2c-1", 0x3C);
#else
    display = new SSD1306::OledBitmap<128, 64>();
#endif
}

void Screen::showLogo() {
    display->setFrom(logo, SSD1306::OledPoint(0, 0));
    update();
}

void Screen::showInfo(const char *line1, const char *line2) {
    spdlog::debug("Screen {} {}", line1, line2);

    display->clear();
    printLn(line1, 0);
    printLn(line2, 1);
    printLn(getSystemTemp().c_str(), 2);
    printLn(getLocalIp().c_str(), 3);
    update();
}

void Screen::update() {
#ifdef PI
    display->displayUpdate();
#else
    Mat image(64, 128, CV_8UC3, Scalar(0, 0, 0));

    for (short r = 0; r < 128; r++) {
        for (short c = 0; c < 64; c++) {
            if (display->isSetPixel(SSD1306::OledPoint(c, r))) {
                image.at<Vec3b>(r, c) = Vec3b(255, 255, 255);
            }
        }
    }

//    imwrite("test.png", image);
// FIXME ne fonctionne pas depuis un thread
//    imshow("Screen", image);
#endif
}

void Screen::printLn(const char *str, short line) {
    drawString8x16(SSD1306::OledPoint(0, line * 16),
                   str,
                   SSD1306::PixelStyle::Set,
                   *display);
}
